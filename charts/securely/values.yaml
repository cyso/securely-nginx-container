# Default values for securely.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "7-8"

imageCredentials:
  registry: registry.securely.ai

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

dashboard:
  replicaCount: 2

  imagePullSecrets:
    - name: securely-pullsecret

  extraVolumeMounts: 
  - name: elastic-ca-certiticates
    mountPath:  /var/run/elastic-ca-certiticates
    readOnly: true

  extraVolumes: 
  - name: elastic-ca-certiticates
    secret:
      secretName: securely-es-http-certs-public
  
  env:
  - name: ELASTICSEARCH_USERNAME
    value: elastic
  - name: ELASTICSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: securely-es-elastic-user
        key: elastic
  - name: ELASTICSEARCH_HOSTS
    value: '["https://securely-es-http:9200"]'
  - name: XPACK_SECURITY_ENCRYPTIONKEY
    value: K1W1mjKbTbBivfeog9fx0L4WKj27nERr'
  - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
    value: /var/run/elastic-ca-certiticates/ca.crt
  - name: ELASTICSEARCH_SSL_VERIFICATIONMODE
    value: certificate

logstash:
  replicaCount: 2

  imagePullSecrets:
    - name: securely-pullsecret

  extraVolumeMounts: 
  - name: elastic-ca-certiticates
    mountPath: /usr/share/logstash/plugin-configuration/cacert.pem
    readOnly: true
    subPath: ca.crt

  extraVolumes: 
  - name: elastic-ca-certiticates
    secret:
      secretName: securely-es-http-certs-public
    
  env: 
  - name: ES_USERNAME
    value: elastic
  - name: ES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: securely-es-elastic-user
        key: elastic
  - name: ES_HOST
    value: 'https://securely-es-http:9200'
  - name: SSL_VERIFY
    value: 'false'
  - name: xpack.monitoring.enabled
    value: 'true'
  - name: xpack.monitoring.elasticsearch.hosts
    value: '["https://securely-es-http:9200"]'
  - name: xpack.monitoring.elasticsearch.username
    value: elastic
  - name: xpack.monitoring.elasticsearch.password
    valueFrom:
      secretKeyRef:
        name: securely-es-elastic-user
        key: elastic
  - name: xpack.monitoring.elasticsearch.ssl.certificate_authority
    value: /usr/share/logstash/plugin-configuration/cacert.pem
